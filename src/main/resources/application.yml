server:
  port: 8080

spring:
  application:
    name: shorts-creator

# OpenAI API Configuration
openai:
  api:
    key: ${OPENAI_API_KEY:YOUR_OPENAI_API_KEY}
    model: gpt-4.1-mini
  master_prompt:
    filepath: classpath:prompts/master_prompt.txt
  recent_tips_filepath: recent_tip_titles.json

# YouTube API Configuration
youtube:
  api:
    key: ${YOUTUBE_API_KEY:YOUR_YOUTUBE_API_KEY}
  oauth2:
    client_id: ${YOUTUBE_OAUTH_CLIENT_ID:YOUR_OAUTH_CLIENT_ID}
    client_secret: ${YOUTUBE_OAUTH_CLIENT_SECRET:YOUR_OAUTH_CLIENT_SECRET}
    redirect_uri: http://localhost:8080/oauth2/callback
    scopes:
      - https://www.googleapis.com/auth/youtube.upload
      - https://www.googleapis.com/auth/youtube
    application_name: YouTube Shorts Creator
    credentials_filepath: youtube_oauth_credentials.json
    access_type: offline
    approval_prompt: force

  # YouTube 업로드 기본 설정
  upload:
    # 기본 메타데이터
    category_id: "22"  # People & Blogs
    default_language: "en"  # English

    # 기본 태그들 (ai 제거됨)
    default_tags:
      - "shorts"
      - "tips"
      - "relationships"
      - "marriage"
      - "advice"
      - "sexless"
      - "couples"

    # 시청자 설정
    made_for_kids: false

    # 재생목록 설정
    default_playlist: "Sexless Marriage Advice"

    # 공개 설정
    default_privacy_status: "private"  # private, public, unlisted

    # 위치 정보
    recording_location: "United States"

    # 썸네일 설정
    auto_thumbnail: true

    # 라이선스 및 권한
    license: "youtube"  # youtube 또는 creativeCommon
    embeddable: true
    public_stats_viewable: true

    # Shorts 특화 설정
    shorts_remix_enabled: true

# InVideo AI Login Automation Configuration
invideo:
  access_token_filepath: invideo_access_token.txt
  login:
    url: https://invideo.io/login
    google_signin_button_xpath: "//button[.//p[text()='Join with Google']]"
    gmail:
      username:
        selector: "input[type='email']"
        next:
          selector: "#identifierNext button"
      password:
        selector: "input[type='password']"
        next:
          selector: "#passwordNext button"
      mfa_select_prompt_method_xpath: "//div[@data-challengetype='39'][.//div[contains(text(), '휴대전화나 태블릿에서')]]"
    success:
      url_starts_with: "https://ai.invideo.io/workspace/"
    mfa:
      timeout:
        seconds: 120
  editor:
    settings_page_load_timeout_seconds: 300
    prompt_input_selector: "//textarea[@name='brief']"
    generate_button_selector: "//button[contains(.//text(), 'Generate') and contains(.//text(), 'video')]"
    confirmation_page_indicator_xpath: "//button[.//div[contains(text(),'Continue')]]"
    audience_married_adults_button_xpath: "//button[@value='Married adults']"
    visual_style_inspirational_button_xpath: "//button[@value='Inspirational']"
    continue_button_xpath: "//button[.//div[contains(text(),'Continue')]]"
    download_button_xpath: "//button[contains(.//text(), 'Download')]"
    download_video_option_xpath: "//div[@role='menuitem'][.//div[contains(text(), 'Download video')]]"
    download_dialog_xpath: "//div[@role='dialog'][.//div[contains(text(), 'Download Settings')]]"
    download_continue_button_xpath: "//div[@role='dialog']//button[.//div[contains(text(), 'Continue')]]"
    video_generation_timeout_seconds: 600
  account:
    username: ${INVIDEO_GMAIL_USERNAME:YOUR_GMAIL_USERNAME@example.com}
    password: ${INVIDEO_GMAIL_PASSWORD:YOUR_GMAIL_PASSWORD}
  dashboard:
    loaded_indicator:
      selector: "//textarea[@name='brief']"
  download:
    folder_path: "C:\\Users\\kimss\\Videos"
    # folder_path: "/home/myuser/videos"  # Linux
    wait_timeout_seconds: 300

# Telegram Bot Configuration
telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN:YOUR_TELEGRAM_BOT_TOKEN}
    username: ${TELEGRAM_BOT_USERNAME:YOUR_TELEGRAM_BOT_USERNAME}

# Logging Configuration
logging:
  level:
    root: INFO
    com.shortscreator: DEBUG
    org.springframework.web: INFO
    org.openqa.selenium: WARN
    io.github.bonigarcia.wdm: WARN